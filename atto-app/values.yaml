# Default values for atto-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

domains: []

commit: "master"

image:
  repository: nginx
  pullPolicy: IfNotPresent
  port: 3000
  command:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  enabled: true

migration:
  enabled: true

jobs: []
envFrom: []
env:
- name: DB_USER
  valueFrom:
    secretKeyRef:
      name: db
      key: user
- name: DB_PASSWORD
  valueFrom:
    secretKeyRef:
      name: db
      key: password
- name: AWS_ACCESS_KEY_ID
  valueFrom:
    secretKeyRef:
      name: aws
      key: access
- name: AWS_SECRET_ACCESS_KEY
  valueFrom:
    secretKeyRef:
      name: aws
      key: secret

vpa:
  enabled: false

deployment:
  enabled: true

sidekiq:
  enabled: false
  replicaCount: 1
  command: ["bundle", "exec", "sidekiq"]

healthcheck: "/_health"

ingress:
  enabled: true
  certType: "cloudflare"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/configuration-snippet: more_clear_headers "Server";
    nginx.org/proxy-pass-headers: "HTTP_CF_IPCOUNTRY"
  hosts: []
  tls: []

resources:
  requests:
    memory: 128M
  limits:
    memory: 1G

nodeSelector: {}

tolerations: []

affinity: {}

vault: {}

annotations:
  secrets.doppler.com/reload: 'true'
